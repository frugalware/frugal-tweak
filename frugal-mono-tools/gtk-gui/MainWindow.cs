
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Notebook ONG_principal;

	private global::Gtk.VBox vbox4;

	private global::Gtk.HBox hbox11;

	private global::Gtk.ComboBox CBO_Repo;

	private global::Gtk.Entry SAI_pkg;

	private global::Gtk.Button BTN_Search;

	private global::Gtk.ScrolledWindow GtkScrolledWindow;

	private global::Gtk.TreeView treeviewpkg;

	private global::Gtk.HBox hbox12;

	private global::Gtk.Button BTN_Uninstall;

	private global::Gtk.Button BTN_Install;

	private global::Gtk.Label LIB_pkg;

	private global::Gtk.VBox vbox10;

	private global::Gtk.ScrolledWindow GtkScrolledWindow4;

	private global::Gtk.TreeView TREE_UpdatePkg;

	private global::Gtk.HBox hbox31;

	private global::Gtk.Label label17;

	private global::Gtk.Entry SAI_ignorePkg;

	private global::Gtk.Button BTN_ApplyIgnorePkg;

	private global::Gtk.HBox hbox22;

	private global::Gtk.Button BTN_Hide;

	private global::Gtk.Button BTN_UpdateDatabase;

	private global::Gtk.Button BTN_Refresh;

	private global::Gtk.Button BTN_Update;

	private global::Gtk.Label label1;

	private global::Gtk.VBox vbox6;

	private global::Gtk.HBox hbox13;

	private global::Gtk.Label label2;

	private global::Gtk.Entry SAI_Layout;

	private global::Gtk.HBox hbox16;

	private global::Gtk.Label label4;

	private global::Gtk.Label LIB_Lspci;

	private global::Gtk.ComboBoxEntry CBO_GraphicalDevice;

	private global::Gtk.Label LIB_XorgGraphic;

	private global::Gtk.Button BTN_Synaptics;

	private global::Gtk.CheckButton INT_Numlock;

	private global::Gtk.HBox hbox14;

	private global::Gtk.Button BTN_Xorg;

	private global::Gtk.Label label3;

	private global::Gtk.VBox vbox11;

	private global::Gtk.HBox hbox30;

	private global::Gtk.Image image9;

	private global::Gtk.HBox hbox24;

	private global::Gtk.Label label11;

	private global::Gtk.Entry SAI_Host;

	private global::Gtk.HBox hbox25;

	private global::Gtk.Label label12;

	private global::Gtk.Entry SAI_Distribution;

	private global::Gtk.HBox hbox26;

	private global::Gtk.Label label13;

	private global::Gtk.Entry SAI_Kernel;

	private global::Gtk.HBox hbox27;

	private global::Gtk.Label label14;

	private global::Gtk.Entry SAI_Shell;

	private global::Gtk.HBox hbox28;

	private global::Gtk.Label label15;

	private global::Gtk.Label label16;

	private global::Gtk.Entry SAI_Locale;

	private global::Gtk.HBox hbox29;

	private global::Gtk.Button BTN_System;

	private global::Gtk.Label label5;

	private global::Gtk.VBox vbox2;

	private global::Gtk.HBox hbox15;

	private global::Gtk.Button BTN_Printer;

	private global::Gtk.Label LAB_Printer;

	private global::Gtk.HBox hbox17;

	private global::Gtk.Button BTN_Setup;

	private global::Gtk.Label LIB_Setup;

	private global::Gtk.HBox hbox18;

	private global::Gtk.Label LIB_Lirc;

	private global::Gtk.HBox hbox19;

	private global::Gtk.Label LIB_Bluez;

	private global::Gtk.ScrolledWindow GtkScrolledWindow3;

	private global::Gtk.TextView TXT_Lspci;

	private global::Gtk.Label LIB_Materiel;

	private global::Gtk.VBox vbox7;

	private global::Gtk.ScrolledWindow GtkScrolledWindow1;

	private global::Gtk.TreeView TREE_Services;

	private global::Gtk.HBox hbox20;

	private global::Gtk.Button BTN_ServiceStart;

	private global::Gtk.Button BTN_ServiceStop;

	private global::Gtk.Button BTN_ServiceDelBoot;

	private global::Gtk.Button BTN_ServiceAddBoot;

	private global::Gtk.Label label6;

	private global::Gtk.VBox vbox1;

	private global::Gtk.HBox hbox1;

	private global::Gtk.Image image6;

	private global::Gtk.CheckButton INT_FW;

	private global::Gtk.HBox hbox2;

	private global::Gtk.Image image7;

	private global::Gtk.CheckButton INT_NM;

	private global::Gtk.Label LIB_NMNotInstalled;

	private global::Gtk.HBox hbox3;

	private global::Gtk.Image image8;

	private global::Gtk.CheckButton INT_WICD;

	private global::Gtk.Label LIB_WICDNotInstalled;

	private global::Gtk.HBox hbox4;

	private global::Gtk.Button BTN_Network;

	private global::Gtk.Label LIB_Network;

	private global::Gtk.VBox vbox3;

	private global::Gtk.HBox hbox5;

	private global::Gtk.Image image1;

	private global::Gtk.CheckButton INT_XDM;

	private global::Gtk.Label LIB_XDM;

	private global::Gtk.HBox hbox6;

	private global::Gtk.Image image2;

	private global::Gtk.CheckButton INT_LXDM;

	private global::Gtk.Label LIB_LXDM;

	private global::Gtk.HBox hbox7;

	private global::Gtk.Image image3;

	private global::Gtk.CheckButton INT_Slim;

	private global::Gtk.Label LIB_SLIM;

	private global::Gtk.HBox hbox9;

	private global::Gtk.Image image4;

	private global::Gtk.CheckButton INT_GDM;

	private global::Gtk.Label LIB_GDM;

	private global::Gtk.HBox hbox10;

	private global::Gtk.Image image5;

	private global::Gtk.CheckButton INT_KDM;

	private global::Gtk.Label LIB_KDM;

	private global::Gtk.HBox hbox8;

	private global::Gtk.Button BTN_LoginManager;

	private global::Gtk.Label LIB_LoginManager;

	private global::Gtk.VBox vbox9;

	private global::Gtk.Label label7;

	private global::Gtk.HBox hbox23;

	private global::Gtk.Button BTN_Irc;

	private global::Gtk.Button BTN_Irc1;

	private global::Gtk.Button BTN_Irc2;

	private global::Gtk.Button BTN_Forums;

	private global::Gtk.Button BTN_Wiki;

	private global::Gtk.Button BTN_Bugs;

	private global::Gtk.Label label8;

	private global::Gtk.Button BTN_French;

	private global::Gtk.Button BTN_Danish;

	private global::Gtk.Label label9;

	private global::Gtk.VBox vbox5;

	private global::Gtk.ComboBox CBO_TitleNews;

	private global::Gtk.Label LIB_Titre;

	private global::Gtk.Button BTN_Link;

	private global::Gtk.Label LIB_News;

	private global::Gtk.VBox vbox8;

	private global::Gtk.CheckButton INT_CheckStartup;

	private global::Gtk.CheckButton INT_StartWithXSession;

	private global::Gtk.CheckButton INT_ShowNotif;

	private global::Gtk.CheckButton INT_ShowSplash;

	private global::Gtk.HBox hbox21;

	private global::Gtk.Button BTN_SaveConf;

	private global::Gtk.Label Configuration;

	private global::Gtk.ScrolledWindow GtkScrolledWindow2;

	private global::Gtk.TextView textview2;

	private global::Gtk.Label label10;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("Frugalware tweak");
		this.Icon = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.header.svg");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.ONG_principal = new global::Gtk.Notebook ();
		this.ONG_principal.CanFocus = true;
		this.ONG_principal.Name = "ONG_principal";
		this.ONG_principal.CurrentPage = 1;
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox4 = new global::Gtk.VBox ();
		this.vbox4.Name = "vbox4";
		this.vbox4.Spacing = 6;
		// Container child vbox4.Gtk.Box+BoxChild
		this.hbox11 = new global::Gtk.HBox ();
		this.hbox11.Name = "hbox11";
		this.hbox11.Spacing = 6;
		// Container child hbox11.Gtk.Box+BoxChild
		this.CBO_Repo = global::Gtk.ComboBox.NewText ();
		this.CBO_Repo.Name = "CBO_Repo";
		this.hbox11.Add (this.CBO_Repo);
		global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.hbox11[this.CBO_Repo]));
		w1.Position = 0;
		w1.Expand = false;
		w1.Fill = false;
		// Container child hbox11.Gtk.Box+BoxChild
		this.SAI_pkg = new global::Gtk.Entry ();
		this.SAI_pkg.TooltipMarkup = "Package search";
		this.SAI_pkg.CanFocus = true;
		this.SAI_pkg.Name = "SAI_pkg";
		this.SAI_pkg.IsEditable = true;
		this.SAI_pkg.InvisibleChar = '‚óè';
		this.hbox11.Add (this.SAI_pkg);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.hbox11[this.SAI_pkg]));
		w2.Position = 1;
		// Container child hbox11.Gtk.Box+BoxChild
		this.BTN_Search = new global::Gtk.Button ();
		this.BTN_Search.CanFocus = true;
		this.BTN_Search.Name = "BTN_Search";
		this.BTN_Search.UseUnderline = true;
		this.BTN_Search.Label = global::Mono.Unix.Catalog.GetString ("Search");
		this.hbox11.Add (this.BTN_Search);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox11[this.BTN_Search]));
		w3.Position = 2;
		w3.Expand = false;
		w3.Fill = false;
		this.vbox4.Add (this.hbox11);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox4[this.hbox11]));
		w4.Position = 0;
		w4.Expand = false;
		w4.Fill = false;
		// Container child vbox4.Gtk.Box+BoxChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.treeviewpkg = new global::Gtk.TreeView ();
		this.treeviewpkg.CanFocus = true;
		this.treeviewpkg.Name = "treeviewpkg";
		this.GtkScrolledWindow.Add (this.treeviewpkg);
		this.vbox4.Add (this.GtkScrolledWindow);
		global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox4[this.GtkScrolledWindow]));
		w6.Position = 1;
		// Container child vbox4.Gtk.Box+BoxChild
		this.hbox12 = new global::Gtk.HBox ();
		this.hbox12.Name = "hbox12";
		this.hbox12.Spacing = 6;
		// Container child hbox12.Gtk.Box+BoxChild
		this.BTN_Uninstall = new global::Gtk.Button ();
		this.BTN_Uninstall.CanFocus = true;
		this.BTN_Uninstall.Name = "BTN_Uninstall";
		this.BTN_Uninstall.UseUnderline = true;
		this.BTN_Uninstall.Label = global::Mono.Unix.Catalog.GetString ("Uninstall");
		this.hbox12.Add (this.BTN_Uninstall);
		global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.hbox12[this.BTN_Uninstall]));
		w7.Position = 1;
		w7.Expand = false;
		w7.Fill = false;
		// Container child hbox12.Gtk.Box+BoxChild
		this.BTN_Install = new global::Gtk.Button ();
		this.BTN_Install.CanFocus = true;
		this.BTN_Install.Name = "BTN_Install";
		this.BTN_Install.UseUnderline = true;
		this.BTN_Install.Label = global::Mono.Unix.Catalog.GetString ("Install");
		this.hbox12.Add (this.BTN_Install);
		global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hbox12[this.BTN_Install]));
		w8.Position = 2;
		w8.Expand = false;
		w8.Fill = false;
		this.vbox4.Add (this.hbox12);
		global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox4[this.hbox12]));
		w9.Position = 3;
		w9.Expand = false;
		w9.Fill = false;
		this.ONG_principal.Add (this.vbox4);
		// Notebook tab
		this.LIB_pkg = new global::Gtk.Label ();
		this.LIB_pkg.Name = "LIB_pkg";
		this.LIB_pkg.LabelProp = global::Mono.Unix.Catalog.GetString ("Packages");
		this.ONG_principal.SetTabLabel (this.vbox4, this.LIB_pkg);
		this.LIB_pkg.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox10 = new global::Gtk.VBox ();
		this.vbox10.Name = "vbox10";
		this.vbox10.Spacing = 6;
		// Container child vbox10.Gtk.Box+BoxChild
		this.GtkScrolledWindow4 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow4.Name = "GtkScrolledWindow4";
		this.GtkScrolledWindow4.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow4.Gtk.Container+ContainerChild
		this.TREE_UpdatePkg = new global::Gtk.TreeView ();
		this.TREE_UpdatePkg.CanFocus = true;
		this.TREE_UpdatePkg.Name = "TREE_UpdatePkg";
		this.GtkScrolledWindow4.Add (this.TREE_UpdatePkg);
		this.vbox10.Add (this.GtkScrolledWindow4);
		global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vbox10[this.GtkScrolledWindow4]));
		w12.Position = 0;
		// Container child vbox10.Gtk.Box+BoxChild
		this.hbox31 = new global::Gtk.HBox ();
		this.hbox31.Name = "hbox31";
		this.hbox31.Spacing = 6;
		// Container child hbox31.Gtk.Box+BoxChild
		this.label17 = new global::Gtk.Label ();
		this.label17.Name = "label17";
		this.label17.LabelProp = global::Mono.Unix.Catalog.GetString ("Package ignored when system is updated");
		this.hbox31.Add (this.label17);
		global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.hbox31[this.label17]));
		w13.Position = 0;
		w13.Expand = false;
		w13.Fill = false;
		// Container child hbox31.Gtk.Box+BoxChild
		this.SAI_ignorePkg = new global::Gtk.Entry ();
		this.SAI_ignorePkg.CanFocus = true;
		this.SAI_ignorePkg.Name = "SAI_ignorePkg";
		this.SAI_ignorePkg.IsEditable = true;
		this.SAI_ignorePkg.InvisibleChar = '‚Ä¢';
		this.hbox31.Add (this.SAI_ignorePkg);
		global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.hbox31[this.SAI_ignorePkg]));
		w14.Position = 1;
		// Container child hbox31.Gtk.Box+BoxChild
		this.BTN_ApplyIgnorePkg = new global::Gtk.Button ();
		this.BTN_ApplyIgnorePkg.CanFocus = true;
		this.BTN_ApplyIgnorePkg.Name = "BTN_ApplyIgnorePkg";
		this.BTN_ApplyIgnorePkg.UseUnderline = true;
		this.BTN_ApplyIgnorePkg.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox31.Add (this.BTN_ApplyIgnorePkg);
		global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.hbox31[this.BTN_ApplyIgnorePkg]));
		w15.Position = 2;
		w15.Expand = false;
		w15.Fill = false;
		this.vbox10.Add (this.hbox31);
		global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox10[this.hbox31]));
		w16.Position = 1;
		w16.Expand = false;
		w16.Fill = false;
		// Container child vbox10.Gtk.Box+BoxChild
		this.hbox22 = new global::Gtk.HBox ();
		this.hbox22.Name = "hbox22";
		this.hbox22.Spacing = 6;
		// Container child hbox22.Gtk.Box+BoxChild
		this.BTN_Hide = new global::Gtk.Button ();
		this.BTN_Hide.CanFocus = true;
		this.BTN_Hide.Name = "BTN_Hide";
		this.BTN_Hide.UseUnderline = true;
		this.BTN_Hide.Label = global::Mono.Unix.Catalog.GetString ("Hide this update package");
		this.hbox22.Add (this.BTN_Hide);
		global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.hbox22[this.BTN_Hide]));
		w17.Position = 0;
		w17.Expand = false;
		w17.Fill = false;
		// Container child hbox22.Gtk.Box+BoxChild
		this.BTN_UpdateDatabase = new global::Gtk.Button ();
		this.BTN_UpdateDatabase.CanFocus = true;
		this.BTN_UpdateDatabase.Name = "BTN_UpdateDatabase";
		this.BTN_UpdateDatabase.UseUnderline = true;
		this.BTN_UpdateDatabase.Label = global::Mono.Unix.Catalog.GetString ("Update pacman-g2 database");
		this.hbox22.Add (this.BTN_UpdateDatabase);
		global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.hbox22[this.BTN_UpdateDatabase]));
		w18.Position = 1;
		w18.Expand = false;
		w18.Fill = false;
		// Container child hbox22.Gtk.Box+BoxChild
		this.BTN_Refresh = new global::Gtk.Button ();
		this.BTN_Refresh.CanFocus = true;
		this.BTN_Refresh.Name = "BTN_Refresh";
		this.BTN_Refresh.UseUnderline = true;
		this.BTN_Refresh.Label = global::Mono.Unix.Catalog.GetString ("Refresh list");
		this.hbox22.Add (this.BTN_Refresh);
		global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.hbox22[this.BTN_Refresh]));
		w19.Position = 2;
		w19.Expand = false;
		w19.Fill = false;
		// Container child hbox22.Gtk.Box+BoxChild
		this.BTN_Update = new global::Gtk.Button ();
		this.BTN_Update.CanFocus = true;
		this.BTN_Update.Name = "BTN_Update";
		this.BTN_Update.UseUnderline = true;
		this.BTN_Update.Label = global::Mono.Unix.Catalog.GetString ("Update system");
		this.hbox22.Add (this.BTN_Update);
		global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.hbox22[this.BTN_Update]));
		w20.Position = 3;
		w20.Expand = false;
		w20.Fill = false;
		this.vbox10.Add (this.hbox22);
		global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox10[this.hbox22]));
		w21.Position = 2;
		w21.Expand = false;
		w21.Fill = false;
		this.ONG_principal.Add (this.vbox10);
		global::Gtk.Notebook.NotebookChild w22 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox10]));
		w22.Position = 1;
		// Notebook tab
		this.label1 = new global::Gtk.Label ();
		this.label1.Name = "label1";
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Update list");
		this.ONG_principal.SetTabLabel (this.vbox10, this.label1);
		this.label1.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox6 = new global::Gtk.VBox ();
		this.vbox6.Name = "vbox6";
		this.vbox6.Spacing = 6;
		// Container child vbox6.Gtk.Box+BoxChild
		this.hbox13 = new global::Gtk.HBox ();
		this.hbox13.Name = "hbox13";
		this.hbox13.Spacing = 6;
		// Container child hbox13.Gtk.Box+BoxChild
		this.label2 = new global::Gtk.Label ();
		this.label2.Name = "label2";
		this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Layout");
		this.hbox13.Add (this.label2);
		global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.hbox13[this.label2]));
		w23.Position = 0;
		w23.Expand = false;
		w23.Fill = false;
		// Container child hbox13.Gtk.Box+BoxChild
		this.SAI_Layout = new global::Gtk.Entry ();
		this.SAI_Layout.CanFocus = true;
		this.SAI_Layout.Name = "SAI_Layout";
		this.SAI_Layout.IsEditable = true;
		this.SAI_Layout.MaxLength = 10;
		this.SAI_Layout.InvisibleChar = '‚óè';
		this.hbox13.Add (this.SAI_Layout);
		global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.hbox13[this.SAI_Layout]));
		w24.PackType = ((global::Gtk.PackType)(1));
		w24.Position = 1;
		w24.Expand = false;
		this.vbox6.Add (this.hbox13);
		global::Gtk.Box.BoxChild w25 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.hbox13]));
		w25.Position = 0;
		w25.Expand = false;
		w25.Fill = false;
		// Container child vbox6.Gtk.Box+BoxChild
		this.hbox16 = new global::Gtk.HBox ();
		this.hbox16.Name = "hbox16";
		this.hbox16.Spacing = 6;
		// Container child hbox16.Gtk.Box+BoxChild
		this.label4 = new global::Gtk.Label ();
		this.label4.Name = "label4";
		this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Graphical device : ");
		this.hbox16.Add (this.label4);
		global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.hbox16[this.label4]));
		w26.Position = 0;
		w26.Expand = false;
		w26.Fill = false;
		// Container child hbox16.Gtk.Box+BoxChild
		this.LIB_Lspci = new global::Gtk.Label ();
		this.LIB_Lspci.Name = "LIB_Lspci";
		this.LIB_Lspci.LabelProp = global::Mono.Unix.Catalog.GetString ("lspci");
		this.hbox16.Add (this.LIB_Lspci);
		global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.hbox16[this.LIB_Lspci]));
		w27.Position = 1;
		w27.Expand = false;
		w27.Fill = false;
		// Container child hbox16.Gtk.Box+BoxChild
		this.CBO_GraphicalDevice = global::Gtk.ComboBoxEntry.NewText ();
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("apm"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("ark"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("ast"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("ati"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("chips"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("cirrus"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("dummy"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("fbdev"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("geode"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("glint"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("i128"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("i740"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("intel"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("mach64"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("mga"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("neomagic"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("nouveau"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("nv"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("openchrome"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("qxl"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("r128"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("radeon"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("radeonhd"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("rendition"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("s3"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("s3virge"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("savage"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("siliconmotion"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("sis"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("sisusb"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("tdfx"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("tga"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("trident"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("tseng"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("v4l"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("vesa"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("vmware"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("vmwlegacy"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("voodoo"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("xgi"));
		this.CBO_GraphicalDevice.AppendText (global::Mono.Unix.Catalog.GetString ("ztv"));
		this.CBO_GraphicalDevice.Name = "CBO_GraphicalDevice";
		this.hbox16.Add (this.CBO_GraphicalDevice);
		global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.hbox16[this.CBO_GraphicalDevice]));
		w28.PackType = ((global::Gtk.PackType)(1));
		w28.Position = 2;
		w28.Expand = false;
		w28.Fill = false;
		this.vbox6.Add (this.hbox16);
		global::Gtk.Box.BoxChild w29 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.hbox16]));
		w29.Position = 1;
		w29.Expand = false;
		w29.Fill = false;
		// Container child vbox6.Gtk.Box+BoxChild
		this.LIB_XorgGraphic = new global::Gtk.Label ();
		this.LIB_XorgGraphic.Name = "LIB_XorgGraphic";
		this.LIB_XorgGraphic.LabelProp = global::Mono.Unix.Catalog.GetString ("Current driver in use ");
		this.vbox6.Add (this.LIB_XorgGraphic);
		global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.LIB_XorgGraphic]));
		w30.Position = 2;
		w30.Expand = false;
		w30.Fill = false;
		// Container child vbox6.Gtk.Box+BoxChild
		this.BTN_Synaptics = new global::Gtk.Button ();
		this.BTN_Synaptics.CanFocus = true;
		this.BTN_Synaptics.Name = "BTN_Synaptics";
		this.BTN_Synaptics.UseUnderline = true;
		this.BTN_Synaptics.Label = global::Mono.Unix.Catalog.GetString ("You have a touchpad but xf86-input-synaptics is not installed. Click here to install it.");
		this.vbox6.Add (this.BTN_Synaptics);
		global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.BTN_Synaptics]));
		w31.Position = 3;
		w31.Expand = false;
		w31.Fill = false;
		// Container child vbox6.Gtk.Box+BoxChild
		this.INT_Numlock = new global::Gtk.CheckButton ();
		this.INT_Numlock.CanFocus = true;
		this.INT_Numlock.Name = "INT_Numlock";
		this.INT_Numlock.Label = global::Mono.Unix.Catalog.GetString ("Enable numlock on startX");
		this.INT_Numlock.DrawIndicator = true;
		this.INT_Numlock.UseUnderline = true;
		this.vbox6.Add (this.INT_Numlock);
		global::Gtk.Box.BoxChild w32 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.INT_Numlock]));
		w32.Position = 4;
		w32.Expand = false;
		w32.Fill = false;
		// Container child vbox6.Gtk.Box+BoxChild
		this.hbox14 = new global::Gtk.HBox ();
		this.hbox14.Name = "hbox14";
		this.hbox14.Spacing = 6;
		// Container child hbox14.Gtk.Box+BoxChild
		this.BTN_Xorg = new global::Gtk.Button ();
		this.BTN_Xorg.CanFocus = true;
		this.BTN_Xorg.Name = "BTN_Xorg";
		this.BTN_Xorg.UseUnderline = true;
		this.BTN_Xorg.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox14.Add (this.BTN_Xorg);
		global::Gtk.Box.BoxChild w33 = ((global::Gtk.Box.BoxChild)(this.hbox14[this.BTN_Xorg]));
		w33.Position = 2;
		w33.Expand = false;
		w33.Fill = false;
		this.vbox6.Add (this.hbox14);
		global::Gtk.Box.BoxChild w34 = ((global::Gtk.Box.BoxChild)(this.vbox6[this.hbox14]));
		w34.Position = 6;
		w34.Expand = false;
		w34.Fill = false;
		this.ONG_principal.Add (this.vbox6);
		global::Gtk.Notebook.NotebookChild w35 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox6]));
		w35.Position = 2;
		// Notebook tab
		this.label3 = new global::Gtk.Label ();
		this.label3.Name = "label3";
		this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("Xorg");
		this.ONG_principal.SetTabLabel (this.vbox6, this.label3);
		this.label3.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox11 = new global::Gtk.VBox ();
		this.vbox11.Name = "vbox11";
		this.vbox11.Spacing = 6;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox30 = new global::Gtk.HBox ();
		this.hbox30.Name = "hbox30";
		this.hbox30.Spacing = 6;
		// Container child hbox30.Gtk.Box+BoxChild
		this.image9 = new global::Gtk.Image ();
		this.image9.Name = "image9";
		this.image9.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.fw.png");
		this.hbox30.Add (this.image9);
		global::Gtk.Box.BoxChild w36 = ((global::Gtk.Box.BoxChild)(this.hbox30[this.image9]));
		w36.Position = 2;
		w36.Expand = false;
		w36.Fill = false;
		this.vbox11.Add (this.hbox30);
		global::Gtk.Box.BoxChild w37 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox30]));
		w37.Position = 0;
		w37.Expand = false;
		w37.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox24 = new global::Gtk.HBox ();
		this.hbox24.Name = "hbox24";
		this.hbox24.Spacing = 6;
		// Container child hbox24.Gtk.Box+BoxChild
		this.label11 = new global::Gtk.Label ();
		this.label11.Name = "label11";
		this.label11.LabelProp = global::Mono.Unix.Catalog.GetString ("hostname   ");
		this.hbox24.Add (this.label11);
		global::Gtk.Box.BoxChild w38 = ((global::Gtk.Box.BoxChild)(this.hbox24[this.label11]));
		w38.Position = 0;
		w38.Expand = false;
		w38.Fill = false;
		// Container child hbox24.Gtk.Box+BoxChild
		this.SAI_Host = new global::Gtk.Entry ();
		this.SAI_Host.CanFocus = true;
		this.SAI_Host.Name = "SAI_Host";
		this.SAI_Host.IsEditable = true;
		this.SAI_Host.MaxLength = 50;
		this.SAI_Host.InvisibleChar = '‚Ä¢';
		this.hbox24.Add (this.SAI_Host);
		global::Gtk.Box.BoxChild w39 = ((global::Gtk.Box.BoxChild)(this.hbox24[this.SAI_Host]));
		w39.Position = 2;
		this.vbox11.Add (this.hbox24);
		global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox24]));
		w40.Position = 1;
		w40.Expand = false;
		w40.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox25 = new global::Gtk.HBox ();
		this.hbox25.Name = "hbox25";
		this.hbox25.Spacing = 6;
		// Container child hbox25.Gtk.Box+BoxChild
		this.label12 = new global::Gtk.Label ();
		this.label12.Name = "label12";
		this.label12.LabelProp = global::Mono.Unix.Catalog.GetString ("distribution");
		this.hbox25.Add (this.label12);
		global::Gtk.Box.BoxChild w41 = ((global::Gtk.Box.BoxChild)(this.hbox25[this.label12]));
		w41.Position = 0;
		w41.Expand = false;
		w41.Fill = false;
		// Container child hbox25.Gtk.Box+BoxChild
		this.SAI_Distribution = new global::Gtk.Entry ();
		this.SAI_Distribution.Sensitive = false;
		this.SAI_Distribution.CanFocus = true;
		this.SAI_Distribution.Name = "SAI_Distribution";
		this.SAI_Distribution.IsEditable = true;
		this.SAI_Distribution.InvisibleChar = '‚Ä¢';
		this.hbox25.Add (this.SAI_Distribution);
		global::Gtk.Box.BoxChild w42 = ((global::Gtk.Box.BoxChild)(this.hbox25[this.SAI_Distribution]));
		w42.Position = 2;
		this.vbox11.Add (this.hbox25);
		global::Gtk.Box.BoxChild w43 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox25]));
		w43.Position = 2;
		w43.Expand = false;
		w43.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox26 = new global::Gtk.HBox ();
		this.hbox26.Name = "hbox26";
		this.hbox26.Spacing = 6;
		// Container child hbox26.Gtk.Box+BoxChild
		this.label13 = new global::Gtk.Label ();
		this.label13.Name = "label13";
		this.label13.LabelProp = global::Mono.Unix.Catalog.GetString ("kernel          ");
		this.hbox26.Add (this.label13);
		global::Gtk.Box.BoxChild w44 = ((global::Gtk.Box.BoxChild)(this.hbox26[this.label13]));
		w44.Position = 0;
		w44.Expand = false;
		w44.Fill = false;
		// Container child hbox26.Gtk.Box+BoxChild
		this.SAI_Kernel = new global::Gtk.Entry ();
		this.SAI_Kernel.Sensitive = false;
		this.SAI_Kernel.CanFocus = true;
		this.SAI_Kernel.Name = "SAI_Kernel";
		this.SAI_Kernel.IsEditable = true;
		this.SAI_Kernel.InvisibleChar = '‚Ä¢';
		this.hbox26.Add (this.SAI_Kernel);
		global::Gtk.Box.BoxChild w45 = ((global::Gtk.Box.BoxChild)(this.hbox26[this.SAI_Kernel]));
		w45.Position = 2;
		this.vbox11.Add (this.hbox26);
		global::Gtk.Box.BoxChild w46 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox26]));
		w46.Position = 3;
		w46.Expand = false;
		w46.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox27 = new global::Gtk.HBox ();
		this.hbox27.Name = "hbox27";
		this.hbox27.Spacing = 6;
		// Container child hbox27.Gtk.Box+BoxChild
		this.label14 = new global::Gtk.Label ();
		this.label14.Name = "label14";
		this.label14.LabelProp = global::Mono.Unix.Catalog.GetString ("shell             ");
		this.hbox27.Add (this.label14);
		global::Gtk.Box.BoxChild w47 = ((global::Gtk.Box.BoxChild)(this.hbox27[this.label14]));
		w47.Position = 0;
		w47.Expand = false;
		w47.Fill = false;
		// Container child hbox27.Gtk.Box+BoxChild
		this.SAI_Shell = new global::Gtk.Entry ();
		this.SAI_Shell.Sensitive = false;
		this.SAI_Shell.CanFocus = true;
		this.SAI_Shell.Name = "SAI_Shell";
		this.SAI_Shell.IsEditable = true;
		this.SAI_Shell.InvisibleChar = '‚Ä¢';
		this.hbox27.Add (this.SAI_Shell);
		global::Gtk.Box.BoxChild w48 = ((global::Gtk.Box.BoxChild)(this.hbox27[this.SAI_Shell]));
		w48.Position = 2;
		this.vbox11.Add (this.hbox27);
		global::Gtk.Box.BoxChild w49 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox27]));
		w49.Position = 4;
		w49.Expand = false;
		w49.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox28 = new global::Gtk.HBox ();
		this.hbox28.Name = "hbox28";
		this.hbox28.Spacing = 6;
		// Container child hbox28.Gtk.Box+BoxChild
		this.label15 = new global::Gtk.Label ();
		this.label15.Name = "label15";
		this.label15.LabelProp = global::Mono.Unix.Catalog.GetString ("language    ");
		this.hbox28.Add (this.label15);
		global::Gtk.Box.BoxChild w50 = ((global::Gtk.Box.BoxChild)(this.hbox28[this.label15]));
		w50.Position = 0;
		w50.Expand = false;
		w50.Fill = false;
		// Container child hbox28.Gtk.Box+BoxChild
		this.label16 = new global::Gtk.Label ();
		this.label16.Name = "label16";
		this.label16.LabelProp = global::Mono.Unix.Catalog.GetString ("Computeur should be restarted");
		this.hbox28.Add (this.label16);
		global::Gtk.Box.BoxChild w51 = ((global::Gtk.Box.BoxChild)(this.hbox28[this.label16]));
		w51.Position = 1;
		w51.Expand = false;
		w51.Fill = false;
		// Container child hbox28.Gtk.Box+BoxChild
		this.SAI_Locale = new global::Gtk.Entry ();
		this.SAI_Locale.CanFocus = true;
		this.SAI_Locale.Name = "SAI_Locale";
		this.SAI_Locale.IsEditable = true;
		this.SAI_Locale.InvisibleChar = '‚Ä¢';
		this.hbox28.Add (this.SAI_Locale);
		global::Gtk.Box.BoxChild w52 = ((global::Gtk.Box.BoxChild)(this.hbox28[this.SAI_Locale]));
		w52.Position = 2;
		this.vbox11.Add (this.hbox28);
		global::Gtk.Box.BoxChild w53 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox28]));
		w53.Position = 5;
		w53.Expand = false;
		w53.Fill = false;
		// Container child vbox11.Gtk.Box+BoxChild
		this.hbox29 = new global::Gtk.HBox ();
		this.hbox29.Name = "hbox29";
		this.hbox29.Spacing = 6;
		// Container child hbox29.Gtk.Box+BoxChild
		this.BTN_System = new global::Gtk.Button ();
		this.BTN_System.CanFocus = true;
		this.BTN_System.Name = "BTN_System";
		this.BTN_System.UseUnderline = true;
		this.BTN_System.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox29.Add (this.BTN_System);
		global::Gtk.Box.BoxChild w54 = ((global::Gtk.Box.BoxChild)(this.hbox29[this.BTN_System]));
		w54.Position = 2;
		w54.Expand = false;
		w54.Fill = false;
		this.vbox11.Add (this.hbox29);
		global::Gtk.Box.BoxChild w55 = ((global::Gtk.Box.BoxChild)(this.vbox11[this.hbox29]));
		w55.Position = 6;
		w55.Expand = false;
		w55.Fill = false;
		this.ONG_principal.Add (this.vbox11);
		global::Gtk.Notebook.NotebookChild w56 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox11]));
		w56.Position = 3;
		// Notebook tab
		this.label5 = new global::Gtk.Label ();
		this.label5.Name = "label5";
		this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("System");
		this.ONG_principal.SetTabLabel (this.vbox11, this.label5);
		this.label5.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox2 = new global::Gtk.VBox ();
		this.vbox2.Name = "vbox2";
		this.vbox2.Spacing = 6;
		// Container child vbox2.Gtk.Box+BoxChild
		this.hbox15 = new global::Gtk.HBox ();
		this.hbox15.Name = "hbox15";
		this.hbox15.Spacing = 6;
		// Container child hbox15.Gtk.Box+BoxChild
		this.BTN_Printer = new global::Gtk.Button ();
		this.BTN_Printer.CanFocus = true;
		this.BTN_Printer.Name = "BTN_Printer";
		this.BTN_Printer.UseUnderline = true;
		this.BTN_Printer.Label = global::Mono.Unix.Catalog.GetString ("System Configuration Printer");
		this.hbox15.Add (this.BTN_Printer);
		global::Gtk.Box.BoxChild w57 = ((global::Gtk.Box.BoxChild)(this.hbox15[this.BTN_Printer]));
		w57.Position = 0;
		w57.Expand = false;
		w57.Fill = false;
		// Container child hbox15.Gtk.Box+BoxChild
		this.LAB_Printer = new global::Gtk.Label ();
		this.LAB_Printer.Name = "LAB_Printer";
		this.LAB_Printer.LabelProp = global::Mono.Unix.Catalog.GetString ("You should install \"system-config-printer\"");
		this.hbox15.Add (this.LAB_Printer);
		global::Gtk.Box.BoxChild w58 = ((global::Gtk.Box.BoxChild)(this.hbox15[this.LAB_Printer]));
		w58.PackType = ((global::Gtk.PackType)(1));
		w58.Position = 1;
		w58.Expand = false;
		w58.Fill = false;
		this.vbox2.Add (this.hbox15);
		global::Gtk.Box.BoxChild w59 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox15]));
		w59.Position = 0;
		w59.Expand = false;
		w59.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.hbox17 = new global::Gtk.HBox ();
		this.hbox17.Name = "hbox17";
		this.hbox17.Spacing = 6;
		// Container child hbox17.Gtk.Box+BoxChild
		this.BTN_Setup = new global::Gtk.Button ();
		this.BTN_Setup.CanFocus = true;
		this.BTN_Setup.Name = "BTN_Setup";
		this.BTN_Setup.UseUnderline = true;
		this.BTN_Setup.Label = global::Mono.Unix.Catalog.GetString ("Frugalware System configuration");
		this.hbox17.Add (this.BTN_Setup);
		global::Gtk.Box.BoxChild w60 = ((global::Gtk.Box.BoxChild)(this.hbox17[this.BTN_Setup]));
		w60.Position = 0;
		w60.Expand = false;
		w60.Fill = false;
		// Container child hbox17.Gtk.Box+BoxChild
		this.LIB_Setup = new global::Gtk.Label ();
		this.LIB_Setup.Name = "LIB_Setup";
		this.LIB_Setup.LabelProp = global::Mono.Unix.Catalog.GetString ("You should install frugalwareutils");
		this.hbox17.Add (this.LIB_Setup);
		global::Gtk.Box.BoxChild w61 = ((global::Gtk.Box.BoxChild)(this.hbox17[this.LIB_Setup]));
		w61.PackType = ((global::Gtk.PackType)(1));
		w61.Position = 1;
		w61.Expand = false;
		w61.Fill = false;
		this.vbox2.Add (this.hbox17);
		global::Gtk.Box.BoxChild w62 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox17]));
		w62.Position = 1;
		w62.Expand = false;
		w62.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.hbox18 = new global::Gtk.HBox ();
		this.hbox18.Name = "hbox18";
		this.hbox18.Spacing = 6;
		// Container child hbox18.Gtk.Box+BoxChild
		this.LIB_Lirc = new global::Gtk.Label ();
		this.LIB_Lirc.Name = "LIB_Lirc";
		this.LIB_Lirc.LabelProp = global::Mono.Unix.Catalog.GetString ("You should install lirc");
		this.hbox18.Add (this.LIB_Lirc);
		global::Gtk.Box.BoxChild w63 = ((global::Gtk.Box.BoxChild)(this.hbox18[this.LIB_Lirc]));
		w63.PackType = ((global::Gtk.PackType)(1));
		w63.Position = 1;
		w63.Expand = false;
		w63.Fill = false;
		this.vbox2.Add (this.hbox18);
		global::Gtk.Box.BoxChild w64 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox18]));
		w64.Position = 2;
		w64.Expand = false;
		w64.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.hbox19 = new global::Gtk.HBox ();
		this.hbox19.Name = "hbox19";
		this.hbox19.Spacing = 6;
		// Container child hbox19.Gtk.Box+BoxChild
		this.LIB_Bluez = new global::Gtk.Label ();
		this.LIB_Bluez.Name = "LIB_Bluez";
		this.LIB_Bluez.LabelProp = global::Mono.Unix.Catalog.GetString ("You should install bluez");
		this.hbox19.Add (this.LIB_Bluez);
		global::Gtk.Box.BoxChild w65 = ((global::Gtk.Box.BoxChild)(this.hbox19[this.LIB_Bluez]));
		w65.PackType = ((global::Gtk.PackType)(1));
		w65.Position = 1;
		w65.Expand = false;
		w65.Fill = false;
		this.vbox2.Add (this.hbox19);
		global::Gtk.Box.BoxChild w66 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.hbox19]));
		w66.Position = 3;
		w66.Expand = false;
		w66.Fill = false;
		// Container child vbox2.Gtk.Box+BoxChild
		this.GtkScrolledWindow3 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow3.Name = "GtkScrolledWindow3";
		this.GtkScrolledWindow3.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow3.Gtk.Container+ContainerChild
		this.TXT_Lspci = new global::Gtk.TextView ();
		this.TXT_Lspci.CanFocus = true;
		this.TXT_Lspci.Name = "TXT_Lspci";
		this.GtkScrolledWindow3.Add (this.TXT_Lspci);
		this.vbox2.Add (this.GtkScrolledWindow3);
		global::Gtk.Box.BoxChild w68 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.GtkScrolledWindow3]));
		w68.Position = 4;
		this.ONG_principal.Add (this.vbox2);
		global::Gtk.Notebook.NotebookChild w69 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox2]));
		w69.Position = 4;
		// Notebook tab
		this.LIB_Materiel = new global::Gtk.Label ();
		this.LIB_Materiel.Name = "LIB_Materiel";
		this.LIB_Materiel.LabelProp = global::Mono.Unix.Catalog.GetString ("Hardware");
		this.ONG_principal.SetTabLabel (this.vbox2, this.LIB_Materiel);
		this.LIB_Materiel.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox7 = new global::Gtk.VBox ();
		this.vbox7.Name = "vbox7";
		this.vbox7.Spacing = 6;
		// Container child vbox7.Gtk.Box+BoxChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.TREE_Services = new global::Gtk.TreeView ();
		this.TREE_Services.CanFocus = true;
		this.TREE_Services.Name = "TREE_Services";
		this.GtkScrolledWindow1.Add (this.TREE_Services);
		this.vbox7.Add (this.GtkScrolledWindow1);
		global::Gtk.Box.BoxChild w71 = ((global::Gtk.Box.BoxChild)(this.vbox7[this.GtkScrolledWindow1]));
		w71.Position = 0;
		// Container child vbox7.Gtk.Box+BoxChild
		this.hbox20 = new global::Gtk.HBox ();
		this.hbox20.Name = "hbox20";
		this.hbox20.Spacing = 6;
		// Container child hbox20.Gtk.Box+BoxChild
		this.BTN_ServiceStart = new global::Gtk.Button ();
		this.BTN_ServiceStart.CanFocus = true;
		this.BTN_ServiceStart.Name = "BTN_ServiceStart";
		this.BTN_ServiceStart.UseUnderline = true;
		this.BTN_ServiceStart.Label = global::Mono.Unix.Catalog.GetString ("Start");
		this.hbox20.Add (this.BTN_ServiceStart);
		global::Gtk.Box.BoxChild w72 = ((global::Gtk.Box.BoxChild)(this.hbox20[this.BTN_ServiceStart]));
		w72.Position = 0;
		w72.Expand = false;
		w72.Fill = false;
		// Container child hbox20.Gtk.Box+BoxChild
		this.BTN_ServiceStop = new global::Gtk.Button ();
		this.BTN_ServiceStop.CanFocus = true;
		this.BTN_ServiceStop.Name = "BTN_ServiceStop";
		this.BTN_ServiceStop.UseUnderline = true;
		this.BTN_ServiceStop.Label = global::Mono.Unix.Catalog.GetString ("Stop");
		this.hbox20.Add (this.BTN_ServiceStop);
		global::Gtk.Box.BoxChild w73 = ((global::Gtk.Box.BoxChild)(this.hbox20[this.BTN_ServiceStop]));
		w73.Position = 1;
		w73.Expand = false;
		w73.Fill = false;
		// Container child hbox20.Gtk.Box+BoxChild
		this.BTN_ServiceDelBoot = new global::Gtk.Button ();
		this.BTN_ServiceDelBoot.CanFocus = true;
		this.BTN_ServiceDelBoot.Name = "BTN_ServiceDelBoot";
		this.BTN_ServiceDelBoot.UseUnderline = true;
		this.BTN_ServiceDelBoot.Label = global::Mono.Unix.Catalog.GetString ("Don't start it on boot");
		this.hbox20.Add (this.BTN_ServiceDelBoot);
		global::Gtk.Box.BoxChild w74 = ((global::Gtk.Box.BoxChild)(this.hbox20[this.BTN_ServiceDelBoot]));
		w74.Position = 2;
		w74.Expand = false;
		w74.Fill = false;
		// Container child hbox20.Gtk.Box+BoxChild
		this.BTN_ServiceAddBoot = new global::Gtk.Button ();
		this.BTN_ServiceAddBoot.CanFocus = true;
		this.BTN_ServiceAddBoot.Name = "BTN_ServiceAddBoot";
		this.BTN_ServiceAddBoot.UseUnderline = true;
		this.BTN_ServiceAddBoot.Label = global::Mono.Unix.Catalog.GetString ("Start it on boot");
		this.hbox20.Add (this.BTN_ServiceAddBoot);
		global::Gtk.Box.BoxChild w75 = ((global::Gtk.Box.BoxChild)(this.hbox20[this.BTN_ServiceAddBoot]));
		w75.Position = 3;
		w75.Expand = false;
		w75.Fill = false;
		this.vbox7.Add (this.hbox20);
		global::Gtk.Box.BoxChild w76 = ((global::Gtk.Box.BoxChild)(this.vbox7[this.hbox20]));
		w76.Position = 2;
		w76.Expand = false;
		w76.Fill = false;
		this.ONG_principal.Add (this.vbox7);
		global::Gtk.Notebook.NotebookChild w77 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox7]));
		w77.Position = 5;
		// Notebook tab
		this.label6 = new global::Gtk.Label ();
		this.label6.Name = "label6";
		this.label6.LabelProp = global::Mono.Unix.Catalog.GetString ("Services");
		this.ONG_principal.SetTabLabel (this.vbox7, this.label6);
		this.label6.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hbox1 = new global::Gtk.HBox ();
		this.hbox1.Name = "hbox1";
		this.hbox1.Spacing = 6;
		// Container child hbox1.Gtk.Box+BoxChild
		this.image6 = new global::Gtk.Image ();
		this.image6.Name = "image6";
		this.image6.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.fw.png");
		this.hbox1.Add (this.image6);
		global::Gtk.Box.BoxChild w78 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.image6]));
		w78.Position = 0;
		w78.Expand = false;
		w78.Fill = false;
		// Container child hbox1.Gtk.Box+BoxChild
		this.INT_FW = new global::Gtk.CheckButton ();
		this.INT_FW.CanFocus = true;
		this.INT_FW.Name = "INT_FW";
		this.INT_FW.Label = global::Mono.Unix.Catalog.GetString ("Use Netconfig/Gnetconfig");
		this.INT_FW.DrawIndicator = true;
		this.INT_FW.UseUnderline = true;
		this.hbox1.Add (this.INT_FW);
		global::Gtk.Box.BoxChild w79 = ((global::Gtk.Box.BoxChild)(this.hbox1[this.INT_FW]));
		w79.Position = 1;
		this.vbox1.Add (this.hbox1);
		global::Gtk.Box.BoxChild w80 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox1]));
		w80.Position = 0;
		w80.Expand = false;
		w80.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hbox2 = new global::Gtk.HBox ();
		this.hbox2.Name = "hbox2";
		this.hbox2.Spacing = 6;
		// Container child hbox2.Gtk.Box+BoxChild
		this.image7 = new global::Gtk.Image ();
		this.image7.Name = "image7";
		this.image7.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.nmlogo.png");
		this.hbox2.Add (this.image7);
		global::Gtk.Box.BoxChild w81 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.image7]));
		w81.Position = 0;
		w81.Expand = false;
		w81.Fill = false;
		// Container child hbox2.Gtk.Box+BoxChild
		this.INT_NM = new global::Gtk.CheckButton ();
		this.INT_NM.CanFocus = true;
		this.INT_NM.Name = "INT_NM";
		this.INT_NM.Label = global::Mono.Unix.Catalog.GetString ("Use NetworkManager");
		this.INT_NM.DrawIndicator = true;
		this.INT_NM.UseUnderline = true;
		this.hbox2.Add (this.INT_NM);
		global::Gtk.Box.BoxChild w82 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.INT_NM]));
		w82.Position = 1;
		// Container child hbox2.Gtk.Box+BoxChild
		this.LIB_NMNotInstalled = new global::Gtk.Label ();
		this.LIB_NMNotInstalled.Name = "LIB_NMNotInstalled";
		this.LIB_NMNotInstalled.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox2.Add (this.LIB_NMNotInstalled);
		global::Gtk.Box.BoxChild w83 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.LIB_NMNotInstalled]));
		w83.Position = 2;
		w83.Expand = false;
		w83.Fill = false;
		this.vbox1.Add (this.hbox2);
		global::Gtk.Box.BoxChild w84 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox2]));
		w84.Position = 1;
		w84.Expand = false;
		w84.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hbox3 = new global::Gtk.HBox ();
		this.hbox3.Name = "hbox3";
		this.hbox3.Spacing = 6;
		// Container child hbox3.Gtk.Box+BoxChild
		this.image8 = new global::Gtk.Image ();
		this.image8.Name = "image8";
		this.image8.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.wicdlogo.png");
		this.hbox3.Add (this.image8);
		global::Gtk.Box.BoxChild w85 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.image8]));
		w85.Position = 0;
		w85.Expand = false;
		w85.Fill = false;
		// Container child hbox3.Gtk.Box+BoxChild
		this.INT_WICD = new global::Gtk.CheckButton ();
		this.INT_WICD.CanFocus = true;
		this.INT_WICD.Name = "INT_WICD";
		this.INT_WICD.Label = global::Mono.Unix.Catalog.GetString ("Use Wicd");
		this.INT_WICD.DrawIndicator = true;
		this.INT_WICD.UseUnderline = true;
		this.hbox3.Add (this.INT_WICD);
		global::Gtk.Box.BoxChild w86 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.INT_WICD]));
		w86.Position = 1;
		// Container child hbox3.Gtk.Box+BoxChild
		this.LIB_WICDNotInstalled = new global::Gtk.Label ();
		this.LIB_WICDNotInstalled.Name = "LIB_WICDNotInstalled";
		this.LIB_WICDNotInstalled.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox3.Add (this.LIB_WICDNotInstalled);
		global::Gtk.Box.BoxChild w87 = ((global::Gtk.Box.BoxChild)(this.hbox3[this.LIB_WICDNotInstalled]));
		w87.Position = 2;
		w87.Expand = false;
		w87.Fill = false;
		this.vbox1.Add (this.hbox3);
		global::Gtk.Box.BoxChild w88 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox3]));
		w88.Position = 2;
		w88.Expand = false;
		w88.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.hbox4 = new global::Gtk.HBox ();
		this.hbox4.Name = "hbox4";
		this.hbox4.Spacing = 6;
		// Container child hbox4.Gtk.Box+BoxChild
		this.BTN_Network = new global::Gtk.Button ();
		this.BTN_Network.CanFocus = true;
		this.BTN_Network.Name = "BTN_Network";
		this.BTN_Network.UseUnderline = true;
		this.BTN_Network.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox4.Add (this.BTN_Network);
		global::Gtk.Box.BoxChild w89 = ((global::Gtk.Box.BoxChild)(this.hbox4[this.BTN_Network]));
		w89.Position = 2;
		w89.Expand = false;
		w89.Fill = false;
		this.vbox1.Add (this.hbox4);
		global::Gtk.Box.BoxChild w90 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.hbox4]));
		w90.PackType = ((global::Gtk.PackType)(1));
		w90.Position = 3;
		w90.Expand = false;
		w90.Fill = false;
		this.ONG_principal.Add (this.vbox1);
		global::Gtk.Notebook.NotebookChild w91 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox1]));
		w91.Position = 6;
		// Notebook tab
		this.LIB_Network = new global::Gtk.Label ();
		this.LIB_Network.Name = "LIB_Network";
		this.LIB_Network.LabelProp = global::Mono.Unix.Catalog.GetString ("Network");
		this.ONG_principal.SetTabLabel (this.vbox1, this.LIB_Network);
		this.LIB_Network.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox3 = new global::Gtk.VBox ();
		this.vbox3.Name = "vbox3";
		this.vbox3.Spacing = 6;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox5 = new global::Gtk.HBox ();
		this.hbox5.Name = "hbox5";
		this.hbox5.Spacing = 6;
		// Container child hbox5.Gtk.Box+BoxChild
		this.image1 = new global::Gtk.Image ();
		this.image1.Name = "image1";
		this.image1.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.xorglogo.png");
		this.hbox5.Add (this.image1);
		global::Gtk.Box.BoxChild w92 = ((global::Gtk.Box.BoxChild)(this.hbox5[this.image1]));
		w92.Position = 0;
		w92.Expand = false;
		w92.Fill = false;
		// Container child hbox5.Gtk.Box+BoxChild
		this.INT_XDM = new global::Gtk.CheckButton ();
		this.INT_XDM.CanFocus = true;
		this.INT_XDM.Name = "INT_XDM";
		this.INT_XDM.Label = global::Mono.Unix.Catalog.GetString ("Use XDM");
		this.INT_XDM.DrawIndicator = true;
		this.INT_XDM.UseUnderline = true;
		this.hbox5.Add (this.INT_XDM);
		global::Gtk.Box.BoxChild w93 = ((global::Gtk.Box.BoxChild)(this.hbox5[this.INT_XDM]));
		w93.Position = 1;
		// Container child hbox5.Gtk.Box+BoxChild
		this.LIB_XDM = new global::Gtk.Label ();
		this.LIB_XDM.Name = "LIB_XDM";
		this.LIB_XDM.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox5.Add (this.LIB_XDM);
		global::Gtk.Box.BoxChild w94 = ((global::Gtk.Box.BoxChild)(this.hbox5[this.LIB_XDM]));
		w94.Position = 2;
		w94.Expand = false;
		w94.Fill = false;
		this.vbox3.Add (this.hbox5);
		global::Gtk.Box.BoxChild w95 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox5]));
		w95.Position = 0;
		w95.Expand = false;
		w95.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox6 = new global::Gtk.HBox ();
		this.hbox6.Name = "hbox6";
		this.hbox6.Spacing = 6;
		// Container child hbox6.Gtk.Box+BoxChild
		this.image2 = new global::Gtk.Image ();
		this.image2.Name = "image2";
		this.image2.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.lxdelogo.png");
		this.hbox6.Add (this.image2);
		global::Gtk.Box.BoxChild w96 = ((global::Gtk.Box.BoxChild)(this.hbox6[this.image2]));
		w96.Position = 0;
		w96.Expand = false;
		w96.Fill = false;
		// Container child hbox6.Gtk.Box+BoxChild
		this.INT_LXDM = new global::Gtk.CheckButton ();
		this.INT_LXDM.CanFocus = true;
		this.INT_LXDM.Name = "INT_LXDM";
		this.INT_LXDM.Label = global::Mono.Unix.Catalog.GetString ("Use LXDM");
		this.INT_LXDM.DrawIndicator = true;
		this.INT_LXDM.UseUnderline = true;
		this.hbox6.Add (this.INT_LXDM);
		global::Gtk.Box.BoxChild w97 = ((global::Gtk.Box.BoxChild)(this.hbox6[this.INT_LXDM]));
		w97.Position = 1;
		// Container child hbox6.Gtk.Box+BoxChild
		this.LIB_LXDM = new global::Gtk.Label ();
		this.LIB_LXDM.Name = "LIB_LXDM";
		this.LIB_LXDM.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox6.Add (this.LIB_LXDM);
		global::Gtk.Box.BoxChild w98 = ((global::Gtk.Box.BoxChild)(this.hbox6[this.LIB_LXDM]));
		w98.Position = 2;
		w98.Expand = false;
		w98.Fill = false;
		this.vbox3.Add (this.hbox6);
		global::Gtk.Box.BoxChild w99 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox6]));
		w99.Position = 1;
		w99.Expand = false;
		w99.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox7 = new global::Gtk.HBox ();
		this.hbox7.Name = "hbox7";
		this.hbox7.Spacing = 6;
		// Container child hbox7.Gtk.Box+BoxChild
		this.image3 = new global::Gtk.Image ();
		this.image3.Name = "image3";
		this.image3.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.xfcelogo.png");
		this.hbox7.Add (this.image3);
		global::Gtk.Box.BoxChild w100 = ((global::Gtk.Box.BoxChild)(this.hbox7[this.image3]));
		w100.Position = 0;
		w100.Expand = false;
		w100.Fill = false;
		// Container child hbox7.Gtk.Box+BoxChild
		this.INT_Slim = new global::Gtk.CheckButton ();
		this.INT_Slim.CanFocus = true;
		this.INT_Slim.Name = "INT_Slim";
		this.INT_Slim.Label = global::Mono.Unix.Catalog.GetString ("Use Slim");
		this.INT_Slim.DrawIndicator = true;
		this.INT_Slim.UseUnderline = true;
		this.hbox7.Add (this.INT_Slim);
		global::Gtk.Box.BoxChild w101 = ((global::Gtk.Box.BoxChild)(this.hbox7[this.INT_Slim]));
		w101.Position = 1;
		// Container child hbox7.Gtk.Box+BoxChild
		this.LIB_SLIM = new global::Gtk.Label ();
		this.LIB_SLIM.Name = "LIB_SLIM";
		this.LIB_SLIM.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox7.Add (this.LIB_SLIM);
		global::Gtk.Box.BoxChild w102 = ((global::Gtk.Box.BoxChild)(this.hbox7[this.LIB_SLIM]));
		w102.Position = 2;
		w102.Expand = false;
		w102.Fill = false;
		this.vbox3.Add (this.hbox7);
		global::Gtk.Box.BoxChild w103 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox7]));
		w103.Position = 2;
		w103.Expand = false;
		w103.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox9 = new global::Gtk.HBox ();
		this.hbox9.Name = "hbox9";
		this.hbox9.Spacing = 6;
		// Container child hbox9.Gtk.Box+BoxChild
		this.image4 = new global::Gtk.Image ();
		this.image4.Name = "image4";
		this.image4.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.gnomelogo.png");
		this.hbox9.Add (this.image4);
		global::Gtk.Box.BoxChild w104 = ((global::Gtk.Box.BoxChild)(this.hbox9[this.image4]));
		w104.Position = 0;
		w104.Expand = false;
		w104.Fill = false;
		// Container child hbox9.Gtk.Box+BoxChild
		this.INT_GDM = new global::Gtk.CheckButton ();
		this.INT_GDM.CanFocus = true;
		this.INT_GDM.Name = "INT_GDM";
		this.INT_GDM.Label = global::Mono.Unix.Catalog.GetString ("Use GDM");
		this.INT_GDM.DrawIndicator = true;
		this.INT_GDM.UseUnderline = true;
		this.hbox9.Add (this.INT_GDM);
		global::Gtk.Box.BoxChild w105 = ((global::Gtk.Box.BoxChild)(this.hbox9[this.INT_GDM]));
		w105.Position = 1;
		// Container child hbox9.Gtk.Box+BoxChild
		this.LIB_GDM = new global::Gtk.Label ();
		this.LIB_GDM.Name = "LIB_GDM";
		this.LIB_GDM.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox9.Add (this.LIB_GDM);
		global::Gtk.Box.BoxChild w106 = ((global::Gtk.Box.BoxChild)(this.hbox9[this.LIB_GDM]));
		w106.Position = 2;
		w106.Expand = false;
		w106.Fill = false;
		this.vbox3.Add (this.hbox9);
		global::Gtk.Box.BoxChild w107 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox9]));
		w107.Position = 3;
		w107.Expand = false;
		w107.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox10 = new global::Gtk.HBox ();
		this.hbox10.Name = "hbox10";
		this.hbox10.Spacing = 6;
		// Container child hbox10.Gtk.Box+BoxChild
		this.image5 = new global::Gtk.Image ();
		this.image5.Name = "image5";
		this.image5.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("frugalmonotools.Pictures.kdelogo.png");
		this.hbox10.Add (this.image5);
		global::Gtk.Box.BoxChild w108 = ((global::Gtk.Box.BoxChild)(this.hbox10[this.image5]));
		w108.Position = 0;
		w108.Expand = false;
		w108.Fill = false;
		// Container child hbox10.Gtk.Box+BoxChild
		this.INT_KDM = new global::Gtk.CheckButton ();
		this.INT_KDM.CanFocus = true;
		this.INT_KDM.Name = "INT_KDM";
		this.INT_KDM.Label = global::Mono.Unix.Catalog.GetString ("Use KDM");
		this.INT_KDM.DrawIndicator = true;
		this.INT_KDM.UseUnderline = true;
		this.hbox10.Add (this.INT_KDM);
		global::Gtk.Box.BoxChild w109 = ((global::Gtk.Box.BoxChild)(this.hbox10[this.INT_KDM]));
		w109.Position = 1;
		// Container child hbox10.Gtk.Box+BoxChild
		this.LIB_KDM = new global::Gtk.Label ();
		this.LIB_KDM.Name = "LIB_KDM";
		this.LIB_KDM.LabelProp = global::Mono.Unix.Catalog.GetString ("Not installed");
		this.hbox10.Add (this.LIB_KDM);
		global::Gtk.Box.BoxChild w110 = ((global::Gtk.Box.BoxChild)(this.hbox10[this.LIB_KDM]));
		w110.Position = 2;
		w110.Expand = false;
		w110.Fill = false;
		this.vbox3.Add (this.hbox10);
		global::Gtk.Box.BoxChild w111 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox10]));
		w111.Position = 4;
		w111.Expand = false;
		w111.Fill = false;
		// Container child vbox3.Gtk.Box+BoxChild
		this.hbox8 = new global::Gtk.HBox ();
		this.hbox8.Name = "hbox8";
		this.hbox8.Spacing = 6;
		// Container child hbox8.Gtk.Box+BoxChild
		this.BTN_LoginManager = new global::Gtk.Button ();
		this.BTN_LoginManager.CanFocus = true;
		this.BTN_LoginManager.Name = "BTN_LoginManager";
		this.BTN_LoginManager.UseUnderline = true;
		this.BTN_LoginManager.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox8.Add (this.BTN_LoginManager);
		global::Gtk.Box.BoxChild w112 = ((global::Gtk.Box.BoxChild)(this.hbox8[this.BTN_LoginManager]));
		w112.Position = 2;
		w112.Expand = false;
		w112.Fill = false;
		this.vbox3.Add (this.hbox8);
		global::Gtk.Box.BoxChild w113 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox8]));
		w113.PackType = ((global::Gtk.PackType)(1));
		w113.Position = 5;
		w113.Expand = false;
		w113.Fill = false;
		this.ONG_principal.Add (this.vbox3);
		global::Gtk.Notebook.NotebookChild w114 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox3]));
		w114.Position = 7;
		// Notebook tab
		this.LIB_LoginManager = new global::Gtk.Label ();
		this.LIB_LoginManager.Name = "LIB_LoginManager";
		this.LIB_LoginManager.LabelProp = global::Mono.Unix.Catalog.GetString ("Login Manager");
		this.ONG_principal.SetTabLabel (this.vbox3, this.LIB_LoginManager);
		this.LIB_LoginManager.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox9 = new global::Gtk.VBox ();
		this.vbox9.Name = "vbox9";
		this.vbox9.Spacing = 6;
		// Container child vbox9.Gtk.Box+BoxChild
		this.label7 = new global::Gtk.Label ();
		this.label7.Name = "label7";
		this.label7.LabelProp = global::Mono.Unix.Catalog.GetString ("Frugalware provide some helps supports :\n\nForums : http://forums.frugalware.org\n\nWiki : http://wiki.frugalware.org\n\nirc : irc.freenode.net channel #frugalware");
		this.vbox9.Add (this.label7);
		global::Gtk.Box.BoxChild w115 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.label7]));
		w115.Position = 0;
		w115.Expand = false;
		w115.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.hbox23 = new global::Gtk.HBox ();
		this.hbox23.Name = "hbox23";
		this.hbox23.Spacing = 6;
		// Container child hbox23.Gtk.Box+BoxChild
		this.BTN_Irc = new global::Gtk.Button ();
		this.BTN_Irc.CanFocus = true;
		this.BTN_Irc.Name = "BTN_Irc";
		this.BTN_Irc.UseUnderline = true;
		this.BTN_Irc.Label = global::Mono.Unix.Catalog.GetString ("Join #frugalware");
		this.hbox23.Add (this.BTN_Irc);
		global::Gtk.Box.BoxChild w116 = ((global::Gtk.Box.BoxChild)(this.hbox23[this.BTN_Irc]));
		w116.Position = 0;
		w116.Expand = false;
		w116.Fill = false;
		// Container child hbox23.Gtk.Box+BoxChild
		this.BTN_Irc1 = new global::Gtk.Button ();
		this.BTN_Irc1.CanFocus = true;
		this.BTN_Irc1.Name = "BTN_Irc1";
		this.BTN_Irc1.UseUnderline = true;
		this.BTN_Irc1.Label = global::Mono.Unix.Catalog.GetString ("Join #frugalware.fr");
		this.hbox23.Add (this.BTN_Irc1);
		global::Gtk.Box.BoxChild w117 = ((global::Gtk.Box.BoxChild)(this.hbox23[this.BTN_Irc1]));
		w117.Position = 1;
		w117.Expand = false;
		w117.Fill = false;
		// Container child hbox23.Gtk.Box+BoxChild
		this.BTN_Irc2 = new global::Gtk.Button ();
		this.BTN_Irc2.CanFocus = true;
		this.BTN_Irc2.Name = "BTN_Irc2";
		this.BTN_Irc2.UseUnderline = true;
		this.BTN_Irc2.Label = global::Mono.Unix.Catalog.GetString ("Join #frugalware.hu");
		this.hbox23.Add (this.BTN_Irc2);
		global::Gtk.Box.BoxChild w118 = ((global::Gtk.Box.BoxChild)(this.hbox23[this.BTN_Irc2]));
		w118.Position = 2;
		w118.Expand = false;
		w118.Fill = false;
		this.vbox9.Add (this.hbox23);
		global::Gtk.Box.BoxChild w119 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.hbox23]));
		w119.Position = 1;
		w119.Expand = false;
		w119.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.BTN_Forums = new global::Gtk.Button ();
		this.BTN_Forums.CanFocus = true;
		this.BTN_Forums.Name = "BTN_Forums";
		this.BTN_Forums.UseUnderline = true;
		this.BTN_Forums.Label = global::Mono.Unix.Catalog.GetString ("Forums Frugalware");
		this.vbox9.Add (this.BTN_Forums);
		global::Gtk.Box.BoxChild w120 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.BTN_Forums]));
		w120.Position = 2;
		w120.Expand = false;
		w120.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.BTN_Wiki = new global::Gtk.Button ();
		this.BTN_Wiki.CanFocus = true;
		this.BTN_Wiki.Name = "BTN_Wiki";
		this.BTN_Wiki.UseUnderline = true;
		this.BTN_Wiki.Label = global::Mono.Unix.Catalog.GetString ("Wiki Frugalware");
		this.vbox9.Add (this.BTN_Wiki);
		global::Gtk.Box.BoxChild w121 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.BTN_Wiki]));
		w121.Position = 3;
		w121.Expand = false;
		w121.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.BTN_Bugs = new global::Gtk.Button ();
		this.BTN_Bugs.CanFocus = true;
		this.BTN_Bugs.Name = "BTN_Bugs";
		this.BTN_Bugs.UseUnderline = true;
		this.BTN_Bugs.Label = global::Mono.Unix.Catalog.GetString ("Bugs tracker");
		this.vbox9.Add (this.BTN_Bugs);
		global::Gtk.Box.BoxChild w122 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.BTN_Bugs]));
		w122.Position = 4;
		w122.Expand = false;
		w122.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.label8 = new global::Gtk.Label ();
		this.label8.Name = "label8";
		this.label8.LabelProp = global::Mono.Unix.Catalog.GetString ("Internationalized Frugalware sites");
		this.vbox9.Add (this.label8);
		global::Gtk.Box.BoxChild w123 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.label8]));
		w123.Position = 5;
		w123.Expand = false;
		w123.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.BTN_French = new global::Gtk.Button ();
		this.BTN_French.CanFocus = true;
		this.BTN_French.Name = "BTN_French";
		this.BTN_French.UseUnderline = true;
		this.BTN_French.Label = global::Mono.Unix.Catalog.GetString ("French");
		this.vbox9.Add (this.BTN_French);
		global::Gtk.Box.BoxChild w124 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.BTN_French]));
		w124.Position = 6;
		w124.Expand = false;
		w124.Fill = false;
		// Container child vbox9.Gtk.Box+BoxChild
		this.BTN_Danish = new global::Gtk.Button ();
		this.BTN_Danish.CanFocus = true;
		this.BTN_Danish.Name = "BTN_Danish";
		this.BTN_Danish.UseUnderline = true;
		this.BTN_Danish.Label = global::Mono.Unix.Catalog.GetString ("Danish");
		this.vbox9.Add (this.BTN_Danish);
		global::Gtk.Box.BoxChild w125 = ((global::Gtk.Box.BoxChild)(this.vbox9[this.BTN_Danish]));
		w125.Position = 7;
		w125.Expand = false;
		w125.Fill = false;
		this.ONG_principal.Add (this.vbox9);
		global::Gtk.Notebook.NotebookChild w126 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox9]));
		w126.Position = 8;
		// Notebook tab
		this.label9 = new global::Gtk.Label ();
		this.label9.Name = "label9";
		this.label9.LabelProp = global::Mono.Unix.Catalog.GetString ("Support");
		this.ONG_principal.SetTabLabel (this.vbox9, this.label9);
		this.label9.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox5 = new global::Gtk.VBox ();
		this.vbox5.Name = "vbox5";
		this.vbox5.Spacing = 6;
		// Container child vbox5.Gtk.Box+BoxChild
		this.CBO_TitleNews = global::Gtk.ComboBox.NewText ();
		this.CBO_TitleNews.Name = "CBO_TitleNews";
		this.vbox5.Add (this.CBO_TitleNews);
		global::Gtk.Box.BoxChild w127 = ((global::Gtk.Box.BoxChild)(this.vbox5[this.CBO_TitleNews]));
		w127.Position = 0;
		w127.Expand = false;
		w127.Fill = false;
		// Container child vbox5.Gtk.Box+BoxChild
		this.LIB_Titre = new global::Gtk.Label ();
		this.LIB_Titre.Name = "LIB_Titre";
		this.vbox5.Add (this.LIB_Titre);
		global::Gtk.Box.BoxChild w128 = ((global::Gtk.Box.BoxChild)(this.vbox5[this.LIB_Titre]));
		w128.Position = 1;
		w128.Expand = false;
		w128.Fill = false;
		// Container child vbox5.Gtk.Box+BoxChild
		this.BTN_Link = new global::Gtk.Button ();
		this.BTN_Link.CanFocus = true;
		this.BTN_Link.Name = "BTN_Link";
		this.BTN_Link.UseUnderline = true;
		this.BTN_Link.Label = global::Mono.Unix.Catalog.GetString ("http://www.frugalware.org");
		this.vbox5.Add (this.BTN_Link);
		global::Gtk.Box.BoxChild w129 = ((global::Gtk.Box.BoxChild)(this.vbox5[this.BTN_Link]));
		w129.Position = 3;
		w129.Expand = false;
		w129.Fill = false;
		this.ONG_principal.Add (this.vbox5);
		global::Gtk.Notebook.NotebookChild w130 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox5]));
		w130.Position = 9;
		// Notebook tab
		this.LIB_News = new global::Gtk.Label ();
		this.LIB_News.Name = "LIB_News";
		this.LIB_News.LabelProp = global::Mono.Unix.Catalog.GetString ("News");
		this.ONG_principal.SetTabLabel (this.vbox5, this.LIB_News);
		this.LIB_News.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.vbox8 = new global::Gtk.VBox ();
		this.vbox8.Name = "vbox8";
		this.vbox8.Spacing = 6;
		// Container child vbox8.Gtk.Box+BoxChild
		this.INT_CheckStartup = new global::Gtk.CheckButton ();
		this.INT_CheckStartup.CanFocus = true;
		this.INT_CheckStartup.Name = "INT_CheckStartup";
		this.INT_CheckStartup.Label = global::Mono.Unix.Catalog.GetString ("Check update on frugal-mono-tools startup");
		this.INT_CheckStartup.DrawIndicator = true;
		this.INT_CheckStartup.UseUnderline = true;
		this.vbox8.Add (this.INT_CheckStartup);
		global::Gtk.Box.BoxChild w131 = ((global::Gtk.Box.BoxChild)(this.vbox8[this.INT_CheckStartup]));
		w131.Position = 0;
		w131.Expand = false;
		w131.Fill = false;
		// Container child vbox8.Gtk.Box+BoxChild
		this.INT_StartWithXSession = new global::Gtk.CheckButton ();
		this.INT_StartWithXSession.CanFocus = true;
		this.INT_StartWithXSession.Name = "INT_StartWithXSession";
		this.INT_StartWithXSession.Label = global::Mono.Unix.Catalog.GetString ("Start with X session");
		this.INT_StartWithXSession.Active = true;
		this.INT_StartWithXSession.DrawIndicator = true;
		this.INT_StartWithXSession.UseUnderline = true;
		this.vbox8.Add (this.INT_StartWithXSession);
		global::Gtk.Box.BoxChild w132 = ((global::Gtk.Box.BoxChild)(this.vbox8[this.INT_StartWithXSession]));
		w132.Position = 1;
		w132.Expand = false;
		w132.Fill = false;
		// Container child vbox8.Gtk.Box+BoxChild
		this.INT_ShowNotif = new global::Gtk.CheckButton ();
		this.INT_ShowNotif.CanFocus = true;
		this.INT_ShowNotif.Name = "INT_ShowNotif";
		this.INT_ShowNotif.Label = global::Mono.Unix.Catalog.GetString ("Show notification");
		this.INT_ShowNotif.Active = true;
		this.INT_ShowNotif.DrawIndicator = true;
		this.INT_ShowNotif.UseUnderline = true;
		this.vbox8.Add (this.INT_ShowNotif);
		global::Gtk.Box.BoxChild w133 = ((global::Gtk.Box.BoxChild)(this.vbox8[this.INT_ShowNotif]));
		w133.Position = 2;
		w133.Expand = false;
		w133.Fill = false;
		// Container child vbox8.Gtk.Box+BoxChild
		this.INT_ShowSplash = new global::Gtk.CheckButton ();
		this.INT_ShowSplash.CanFocus = true;
		this.INT_ShowSplash.Name = "INT_ShowSplash";
		this.INT_ShowSplash.Label = global::Mono.Unix.Catalog.GetString ("Show splash screen");
		this.INT_ShowSplash.Active = true;
		this.INT_ShowSplash.DrawIndicator = true;
		this.INT_ShowSplash.UseUnderline = true;
		this.vbox8.Add (this.INT_ShowSplash);
		global::Gtk.Box.BoxChild w134 = ((global::Gtk.Box.BoxChild)(this.vbox8[this.INT_ShowSplash]));
		w134.Position = 3;
		w134.Expand = false;
		w134.Fill = false;
		// Container child vbox8.Gtk.Box+BoxChild
		this.hbox21 = new global::Gtk.HBox ();
		this.hbox21.Name = "hbox21";
		this.hbox21.Spacing = 6;
		// Container child hbox21.Gtk.Box+BoxChild
		this.BTN_SaveConf = new global::Gtk.Button ();
		this.BTN_SaveConf.CanFocus = true;
		this.BTN_SaveConf.Name = "BTN_SaveConf";
		this.BTN_SaveConf.UseUnderline = true;
		this.BTN_SaveConf.Label = global::Mono.Unix.Catalog.GetString ("Apply");
		this.hbox21.Add (this.BTN_SaveConf);
		global::Gtk.Box.BoxChild w135 = ((global::Gtk.Box.BoxChild)(this.hbox21[this.BTN_SaveConf]));
		w135.Position = 2;
		w135.Expand = false;
		w135.Fill = false;
		this.vbox8.Add (this.hbox21);
		global::Gtk.Box.BoxChild w136 = ((global::Gtk.Box.BoxChild)(this.vbox8[this.hbox21]));
		w136.Position = 5;
		w136.Expand = false;
		w136.Fill = false;
		this.ONG_principal.Add (this.vbox8);
		global::Gtk.Notebook.NotebookChild w137 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.vbox8]));
		w137.Position = 10;
		// Notebook tab
		this.Configuration = new global::Gtk.Label ();
		this.Configuration.Name = "Configuration";
		this.Configuration.LabelProp = global::Mono.Unix.Catalog.GetString ("Configuration");
		this.ONG_principal.SetTabLabel (this.vbox8, this.Configuration);
		this.Configuration.ShowAll ();
		// Container child ONG_principal.Gtk.Notebook+NotebookChild
		this.GtkScrolledWindow2 = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow2.Name = "GtkScrolledWindow2";
		this.GtkScrolledWindow2.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow2.Gtk.Container+ContainerChild
		this.textview2 = new global::Gtk.TextView ();
		this.textview2.Buffer.Text = "Tools for Frugalware.\nWritten in Gtk#\nAuthor:\nBouleetbil <bouleetbil@frogdev.info>\nLicence :\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n";
		this.textview2.CanFocus = true;
		this.textview2.Name = "textview2";
		this.GtkScrolledWindow2.Add (this.textview2);
		this.ONG_principal.Add (this.GtkScrolledWindow2);
		global::Gtk.Notebook.NotebookChild w139 = ((global::Gtk.Notebook.NotebookChild)(this.ONG_principal[this.GtkScrolledWindow2]));
		w139.Position = 11;
		// Notebook tab
		this.label10 = new global::Gtk.Label ();
		this.label10.Name = "label10";
		this.label10.LabelProp = global::Mono.Unix.Catalog.GetString ("About");
		this.ONG_principal.SetTabLabel (this.GtkScrolledWindow2, this.label10);
		this.label10.ShowAll ();
		this.Add (this.ONG_principal);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 1064;
		this.DefaultHeight = 536;
		this.BTN_Hide.Hide ();
		this.BTN_Setup.Hide ();
		this.BTN_ServiceStart.Hide ();
		this.BTN_ServiceStop.Hide ();
		this.BTN_ServiceDelBoot.Hide ();
		this.BTN_ServiceAddBoot.Hide ();
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.CBO_Repo.Changed += new global::System.EventHandler (this.selectRepo);
		this.BTN_Search.Clicked += new global::System.EventHandler (this.OnBTNSearchClicked);
		this.BTN_Uninstall.Clicked += new global::System.EventHandler (this.OnBTNUninstallClicked);
		this.BTN_Install.Clicked += new global::System.EventHandler (this.OnBTNInstallClicked);
		this.BTN_ApplyIgnorePkg.Clicked += new global::System.EventHandler (this.OnBTNApplyIgnorePkgClicked);
		this.BTN_Hide.Clicked += new global::System.EventHandler (this.OnBTNHideClicked);
		this.BTN_UpdateDatabase.Clicked += new global::System.EventHandler (this.OnBTNUpdateDatabaseClicked);
		this.BTN_Refresh.Clicked += new global::System.EventHandler (this.OnBTNRefreshClicked);
		this.BTN_Update.Clicked += new global::System.EventHandler (this.OnBTNUpdateClicked);
		this.BTN_Synaptics.Clicked += new global::System.EventHandler (this.OnBTNSynapticsClicked);
		this.BTN_Xorg.Clicked += new global::System.EventHandler (this.ApplyXorg);
		this.BTN_System.Clicked += new global::System.EventHandler (this.OnBTNSystemClicked);
		this.BTN_Printer.Clicked += new global::System.EventHandler (this.OnBTNPrinterClicked);
		this.BTN_Setup.Clicked += new global::System.EventHandler (this.OnBTNSetupClicked);
		this.BTN_ServiceStart.Clicked += new global::System.EventHandler (this.OnBTNServiceStartClicked);
		this.BTN_ServiceStop.Clicked += new global::System.EventHandler (this.OnBTNServiceStopClicked);
		this.BTN_ServiceDelBoot.Clicked += new global::System.EventHandler (this.OnBTNServiceDelBootClicked);
		this.BTN_ServiceAddBoot.Clicked += new global::System.EventHandler (this.OnBTNServiceAddBootClicked);
		this.INT_FW.Clicked += new global::System.EventHandler (this.usefw);
		this.INT_NM.Clicked += new global::System.EventHandler (this.usenm);
		this.INT_WICD.Clicked += new global::System.EventHandler (this.usewicd);
		this.BTN_Network.Clicked += new global::System.EventHandler (this.ApplyNetwork);
		this.INT_XDM.Clicked += new global::System.EventHandler (this.OnINTXDMClicked);
		this.INT_LXDM.Clicked += new global::System.EventHandler (this.OnINTLXDMClicked);
		this.INT_Slim.Clicked += new global::System.EventHandler (this.OnINTSlimClicked);
		this.INT_GDM.Clicked += new global::System.EventHandler (this.OnINTGDMClicked);
		this.INT_KDM.Clicked += new global::System.EventHandler (this.OnINTKDMClicked);
		this.BTN_LoginManager.Clicked += new global::System.EventHandler (this.OnBTNLoginManagerClicked);
		this.BTN_Irc.Clicked += new global::System.EventHandler (this.OnBTNIrcClicked);
		this.BTN_Irc1.Clicked += new global::System.EventHandler (this.OnBTNIrc1Clicked);
		this.BTN_Irc2.Clicked += new global::System.EventHandler (this.OnBTNIrc2Clicked);
		this.BTN_Forums.Clicked += new global::System.EventHandler (this.OnBTNForumsClicked);
		this.BTN_Wiki.Clicked += new global::System.EventHandler (this.OnBTNWikiClicked);
		this.BTN_Bugs.Clicked += new global::System.EventHandler (this.OnBTNBugsClicked);
		this.BTN_French.Clicked += new global::System.EventHandler (this.OnBTNFrenchClicked);
		this.BTN_Danish.Clicked += new global::System.EventHandler (this.OnBTNDanishClicked);
		this.CBO_TitleNews.Changed += new global::System.EventHandler (this.SelectItem);
		this.BTN_Link.Clicked += new global::System.EventHandler (this.OpenLink);
		this.BTN_SaveConf.Clicked += new global::System.EventHandler (this.OnBTNSaveConfClicked);
	}
}
